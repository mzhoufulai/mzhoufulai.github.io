[{"categories":["不重复造轮子"],"content":"参考资料 删除github文件/文件夹 ","date":"2020-06-30","objectID":"/post/gitcommand/:1:0","tags":["Github","Git"],"title":"Gitcommand","uri":"/post/gitcommand/"},{"categories":["不重复造轮子"],"content":"Note Gitbook Github 以Mac为例 ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:0","tags":["docsify","Github"],"title":"使用docsify构建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"1 安装node.js (Homebrew安装) 查找node.js brew search node.js 安装node.js brew install node.js 查看node.js版本 node -v 更新node.js brew upgrade node ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:1","tags":["docsify","Github"],"title":"使用docsify构建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"2 安装docsify 安装docsify npm i docsify-cli -g 查看docsify版本 docsify -v ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:2","tags":["docsify","Github"],"title":"使用docsify构建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"3 初始化项目 docsify init ./ docsify serve ./ ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:3","tags":["docsify","Github"],"title":"使用docsify构建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"参考资料 [1] docsify官方中文网站 [2] 有了docsify神器，从此爱上看文档 [3] docsify - 生成文档网站简单使用教程 [4] 使用docsify 写开源文档 ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:4","tags":["docsify","Github"],"title":"使用docsify构建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8docsify%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"Note Gitbook Github 以Mac为例 ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:0","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"1 安装node.js (Homebrew安装) 查找node.js brew search node.js 安装node.js brew install node.js 查看node.js版本 node -v 更新node.js brew upgrade node ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:1","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"2 安装gitbook 安装gitbook npm install gitbook-cli -g 查看gitbook版本 gitbook -V ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:2","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"3 创建Book目录 cd Book gitbook init # Book目录下多了README.md和SUMMARY.md文件 注意: 在运行gitbook init后，Book目录下只产生了README.md，SUMMARY.md文件产生失败，同时还报错。后面在创建book.js后安装插件报错失败。所以后面改用docsify进行个人文档的搭建。 ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:3","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"4 生成网页并启动gitbook gitbook serve # 通过http://localhost:4000即可访问 ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:4","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"5 生成网页不启动gitbook # 默认将静态页面生成在 _book目录下, gitbook build # 如果想指定目录,比如托管在github上,则需要生成在docs目录,可以使用以下命令 gitbook build ./ ./docs ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:5","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"6 目录结构生成 再次执行gitbook init，即可看到目录下初始化了在SUMMARY.md里配置的目录结构 gitbook init 我们只需要在相应目录下添加内容即可 ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:6","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"7 插件使用 Gitbook默认自带有5个插件： 如果不用可以前面加-去掉 highlight： 代码高亮 search： 导航栏查询功能（不支持中文） sharing：右上角分享功能 fontsettings：字体设置（最上方的\"A\"符号） livereload：为GitBook实时重新加载 如果想使用插件等,可以在目录下创建book.json配置文件,附上配置文件 { \"title\": \"古道长亭\", //标题 \"author\": \"古道长亭\", //作者 \"description\": \"welcome to my docs\", //书描述 \"language\": \"zh-hans\", //语言 en, zh-hans, zh-tw \"gitbook\": \"3.2.3\", //指定gitbook版本 \"styles\": { //样式文件 \"website\": \"./style/website.css\" }, \"structure\": { //指定 Readme、Summary、Glossary 和 Languages 对应的文件名 \"readme\": \"README.md\" }, \"links\": { //左侧导航栏链接信息 \"sidebar\": { \"回到博客\": \"https://blog.zhaojq.top\" } }, \"plugins\": [ //插件列表 \"anchors\", \"anchor-navigation-ex\", //给页面H1-H6标题增加锚点效果,浮动导航模式,页面内顶部导航模式等 \"auto-scroll-table\", //表格滚动条 \"advanced-emoji\", //支持emoji表情 \"code\", //代码添加行号\u0026复制按钮 \"chapter-fold\", //导航目录折叠 \"donate\", //打赏插件 \"expandable-chapters-small\",//可扩展导航章节,比toggle-chapters好用 \"favicon\", //标题栏图标配置 \"fontsettings\", //字体设置（最上方的\"A\"符号） \"github\", //在右上角添加github图标 \"github-buttons\",//github按钮显示,包括可配置stars数量等 \"klipse\", //嵌入类似IDE的功能 \"-livereload\", //为GitBook实时重新加载 \"-lunr\", //自带搜索 \"pageview-count\", //阅读量计数 \"page-toc-button\", //page-toc-button \"popup\", //弹出大图 \"sharing-plus\", //分享插件 \"-sharing\", //自带分享 \"splitter\", //侧边栏宽度可调节 \"-search\", //自带搜索,前面加-去掉 \"search-pro\", //高级搜索插件 需要将默认的search和lunr 插件去掉 \"toggle-chapters\", //扩展导航章节,由expandable-chapters-small代替 \"tbfed-pagefooter\", //页面添加页脚（简单的） \"todo\", //待做项 \"hide-element\" //隐藏元素,比如导航栏中Published by GitBook,\"elements\": [\".gitbook-link\"] ], \"pluginsConfig\": { //配置插件的属性 \"github\": { \"url\": \"https://github.com/zhao-xiaoer\" }, \"hide-element\": { \"elements\": [\".gitbook-link\"] }, \"theme-default\": { \"showLevel\": true }, \"code\": { \"copyButtons\": true }, \"tbfed-pagefooter\": { \"copyright\": \"Copyright © zhaojq 2019\", \"modify_label\": \"本书发布时间：\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" }, \"donate\": { \"wechat\": \"/gitbook/source/images/wechat.jpeg\", \"alipay\": \"/gitbook/source/images/alipay.jpeg\", \"title\": \"感谢支持\", \"button\": \"\\uD83D\\uDE00\", \"alipayText\": \"支付宝打赏\", \"wechatText\": \"微信打赏\" }, \"github-buttons\": { \"buttons\": [{ \"user\": \"zhao-xiaoer\", \"repo\": \"gitbook\", \"type\": \"star\", \"size\": \"small\", \"count\": true } ] }, \"page-toc-button\": { \"maxTocDepth\": 2, \"minTocSize\": 2 }, \"sharing\": { \"douban\": false, \"facebook\": false, \"google\": false, \"hatenaBookmark\": false, \"instapaper\": false, \"line\": false, \"linkedin\": false, \"messenger\": false, \"pocket\": false, \"qq\": true, \"qzone\": true, \"stumbleupon\": false, \"twitter\": false, \"viber\": false, \"vk\": false, \"weibo\": true, \"whatsapp\": false, \"all\": [ \"weibo\",\"qq\", \"qzone\", \"douban\", \"facebook\",\"google\", \"linkedin\",\"twitter\",\"whatsapp\" ] }, \"anchor-navigation-ex\": { \"showLevel\": true }, \"favicon\":{ \"shortcut\": \"\", \"bookmark\": \"\" } } } 使用以下命令安装插件 gitbook install ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:7","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"8 发布到Github 首先build到docs目录 在github新建一个工程,例如:gitbook 将gitbook整个目录push到github/gitbook 配置个人域名的方法和hugo的配置一样,github会自动从docs目录加载静态页面. 接下来你可以通过个人域名访问gitbook ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:8","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"参考资料 如何使用Gitbook搭建个人文档 ","date":"2020-06-18","objectID":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/:0:9","tags":["Gitbook","Github"],"title":"使用Gitbook搭建个人文档","uri":"/post/%E4%BD%BF%E7%94%A8gitbook%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3/"},{"categories":["不重复造轮子"],"content":"Note 这篇文章转载于Dillon关于Markdown语法的文章。 ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:0:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"1 标题 从 h2 到 h6 的标题在每个级别上都加上一个 ＃: ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 输出的HTML看起来像这样: \u003ch2\u003eh2 标题\u003c/h2\u003e \u003ch3\u003eh3 标题\u003c/h3\u003e \u003ch4\u003eh4 标题\u003c/h4\u003e \u003ch5\u003eh5 标题\u003c/h5\u003e \u003ch6\u003eh6 标题\u003c/h6\u003e 标题ID ### 一个很棒的标题 {#custom-id} 输出的 HTML 看起来像这样: \u003ch3 id=\"custom-id\"\u003e一个很棒的标题\u003c/h3\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:1:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"2 注释 注释是和 HTML 兼容的： \u003c!-- 这是一段注释 --\u003e 不能看到以下的注释: ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:2:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"3 水平线 HTML 中的 \u003chr\u003e 标签是用来在段落元素之间创建一个 “专题间隔” 的. 使用 Markdown, 你可以用以下方式创建一个 \u003chr\u003e 标签: ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号 呈现的输出效果如下: ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:3:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"4 段落 按照纯文本的方式书写段落, 纯文本在呈现的 HTML 中将用 \u003cp\u003e/\u003c/p\u003e 标签包裹. 如下段落: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e 可以使用一个空白行进行换行. ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:4:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"5 内联 HTML 元素 如果你需要某个 HTML 标签 (带有一个类), 则可以简单地像这样使用: Markdown 格式的段落. \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 格式的段落. ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:5:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"6 强调 ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:6:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"加粗 用于强调带有较粗字体的文本片段. 以下文本片段会被 渲染为粗体. **渲染为粗体** __渲染为粗体__ 输出的 HTML 看起来像这样: \u003cstrong\u003e渲染为粗体\u003c/strong\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:6:1","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"斜体 用于强调带有斜体的文本片段. 以下文本片段被 渲染为斜体. *渲染为斜体* _渲染为斜体_ 输出的 HTML 看起来像这样: \u003cem\u003e渲染为斜体\u003c/em\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:6:2","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"删除线 按照 GFMGitHub flavored Markdown 你可以使用删除线. ~~这段文本带有删除线.~~ 呈现的输出效果如下: 这段文本带有删除线. 输出的 HTML 看起来像这样: \u003cdel\u003e这段文本带有删除线.\u003c/del\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:6:3","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"组合 加粗, 斜体, 和删除线可以 组合使用. ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 呈现的输出效果如下: 加粗和斜体 删除线和加粗 删除线和斜体 加粗, 斜体和删除线 输出的 HTML 看起来像这样: \u003cem\u003e\u003cstrong\u003e加粗和斜体\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003e删除线和加粗\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e删除线和斜体\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003e加粗, 斜体和删除线\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:6:4","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"7 引用 用于在文档中引用其他来源的内容块. 在要引用的任何文本之前添加 \u003e: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 呈现的输出效果如下: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 输出的 HTML 看起来像这样: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e 引用也可以嵌套: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. 呈现的输出效果如下: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:7:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"8 列表 ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:8:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"无序列表 一系列项的列表, 其中项的顺序没有明显关系. 你可以使用以下任何符号来表示无序列表中的项: * 一项内容 - 一项内容 + 一项内容 例如: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:8:1","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"有序列表 一系列项的列表, 其中项的顺序确实很重要. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e Tip 如果你对每一项使用 1., Markdown 将自动为每一项编号. 例如: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:8:2","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"任务列表 任务列表使你可以创建带有复选框的列表. 要创建任务列表, 请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ]). 要选择一个复选框，请在方括号之间添加 x ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media 呈现的输出效果如下: Write the press release Update the website Contact the media ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:8:3","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"9 代码 ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:9:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"行内代码 用 ` 包装行内代码段. 在这个例子中, `\u003csection\u003e\u003c/section\u003e` 会被包裹成 **代码**. 呈现的输出效果如下: 在这个例子中, \u003csection\u003e\u003c/section\u003e 会被包裹成 代码. 输出的 HTML 看起来像这样: \u003cp\u003e 在这个例子中, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e 会被包裹成 \u003cstrong\u003e代码\u003c/strong\u003e. \u003c/p\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:9:1","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"缩进代码 将几行代码缩进至少四个空格，例如: // Some comments line 1 of code line 2 of code line 3 of code 呈现的输出效果如下: // Some comments line 1 of code line 2 of code line 3 of code 输出的 HTML 看起来像这样: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:9:2","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"围栏代码块 使用 “围栏” ``` 来生成一段带有语言属性的代码块. ```markdown Sample text here... ``` 输出的 HTML 看起来像这样: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:9:3","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"语法高亮 GFMGitHub Flavored Markdown 也支持语法高亮. 要激活它，只需在第一个代码 “围栏” 之后直接添加你要使用的语言的文件扩展名, ```js, 语法高亮显示将自动应用于渲染的 HTML 中. 例如, 在以下 JavaScript 代码中应用语法高亮: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` 呈现的输出效果如下: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; Note Hugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息, 包括语法高亮的 shortcode. ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:9:4","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"10 表格 通过在每个单元格之间添加竖线作为分隔线, 并在标题下添加一行破折号 (也由竖线分隔) 来创建表格. 注意, 竖线不需要垂直对齐. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. 输出的 HTML 看起来像这样: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e 文本右对齐或居中对齐 在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐. 在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:10:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"11 链接 ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:11:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"基本链接 \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) 呈现的输出效果如下 (将鼠标悬停在链接上，没有提示): https://assemble.io contact@revolunet.com Assemble 输出的 HTML 看起来像这样: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:11:1","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"添加一个标题 [Upstage](https://github.com/upstage/ \"Visit Upstage!\") 呈现的输出效果如下 (将鼠标悬停在链接上，会有一行提示): Upstage 输出的 HTML 看起来像这样: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:11:2","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"定位标记 定位标记使你可以跳至同一页面上的指定锚点. 例如, 每个章节: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. Note 定位标记的位置几乎是任意的. 因为它们并不引人注目, 所以它们通常被放在同一行了. ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:11:3","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"12 脚注 脚注使你可以添加注释和参考, 而不会使文档正文混乱. 当你创建脚注时, 会在添加脚注引用的位置出现带有链接的上标编号. 读者可以单击链接以跳至页面底部的脚注内容. 要创建脚注引用, 请在方括号中添加插入符号和标识符 ([^1]). 标识符可以是数字或单词, 但不能包含空格或制表符. 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中, 脚注按顺序编号. 在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注). 你不一定要在文档末尾添加脚注. 可以将它们放在除列表, 引用和表格等元素之外的任何位置. 这是一个数字脚注[^1]. 这是一个带标签的脚注[^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 这是一个数字脚注1. 这是一个带标签的脚注2 ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:12:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"13 图片 图片的语法与链接相似, 但包含一个在前面的感叹号. ![Minion](https://octodex.github.com/images/minion.png) 或者: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The StormtroopocatAlt text \" The Stormtroopocat 像链接一样, 图片也具有脚注样式的语法: ![Alt text][id] The DojocatAlt text \" The Dojocat 稍后在文档中提供参考内容, 用来定义 URL 的位置: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" Tip LoveIt 主题提供了一个包含更多功能的 图片的 shortcode. ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:13:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"相关文章 [1] Aaron Swartz的博客：(http://www.aaronsw.com/) [2] John Gruber的博客： (https://daringfireball.net/) 这是一个数字脚注 ↩︎ 这是一个带标签的脚注 ↩︎ ","date":"2020-06-11","objectID":"/post/markdown%E8%AF%AD%E6%B3%95/:14:0","tags":["markdown","语法"],"title":"Markdown语法","uri":"/post/markdown%E8%AF%AD%E6%B3%95/"},{"categories":["不重复造轮子"],"content":"Hugo + Github 搭建个人博客 ","date":"2020-06-11","objectID":"/post/hugo+github/:0:0","tags":["Hugo","Github","Blog"],"title":"Hugo+Github搭建个人博客","uri":"/post/hugo+github/"},{"categories":["不重复造轮子"],"content":"1 准备工作 以苹果电脑为例： Hugo的安装 Github的账号的注册 Git的安装 ","date":"2020-06-11","objectID":"/post/hugo+github/:1:0","tags":["Hugo","Github","Blog"],"title":"Hugo+Github搭建个人博客","uri":"/post/hugo+github/"},{"categories":["不重复造轮子"],"content":"2 搭建流程 ","date":"2020-06-11","objectID":"/post/hugo+github/:2:0","tags":["Hugo","Github","Blog"],"title":"Hugo+Github搭建个人博客","uri":"/post/hugo+github/"},{"categories":["不重复造轮子"],"content":"软件安装 Hugo 安装 Github 账号注册 Git的安装 ","date":"2020-06-11","objectID":"/post/hugo+github/:2:1","tags":["Hugo","Github","Blog"],"title":"Hugo+Github搭建个人博客","uri":"/post/hugo+github/"},{"categories":["不重复造轮子"],"content":"搭建流程 初始化 初始化我们的 Hugo 我们首先需要选择一个路径来存放我们的博客，在你选好的路径下执行 hugo new site Blog 这条命令会创建一个名为 Blog (你也可以使用你喜欢的任意名字) 的文件夹来存放你的博客。执行 cd Blog 进入文件夹。 git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt 创建新页面 hugo new about.md 此时你就可以在 http://localhost:1313 访问到你的博客了 hugo server --buildDrafts -w hugo 此时你的博客目录下会多出一个 public 文件夹来。这便是 Hugo 生成的网站 第一次发布 git init git remote add origin https://github.com/Github 用户名/Github 用户名.github.io.git git add -A git commit -m \"[介绍，随便写点什么，比如日期]\" git push -u origin master # 如果该命令失败，尝试 git push -f origin master 以后发布 git add -A git commit -m \"[介绍，随便写点什么，比如日期]\" git push -u origin master ","date":"2020-06-11","objectID":"/post/hugo+github/:2:2","tags":["Hugo","Github","Blog"],"title":"Hugo+Github搭建个人博客","uri":"/post/hugo+github/"},{"categories":["不重复造轮子"],"content":"参考文章 使用 Hugo + GitHub Pages 搭建个人博客 使用Hugo搭建静态站点 Hugo中文文档 ","date":"2020-06-11","objectID":"/post/hugo+github/:3:0","tags":["Hugo","Github","Blog"],"title":"Hugo+Github搭建个人博客","uri":"/post/hugo+github/"},{"categories":null,"content":"关于我 博士修行中 喜欢读书、看美剧、电影和跑步 ","date":"2020-06-11","objectID":"/about/:1:0","tags":null,"title":"About","uri":"/about/"}]